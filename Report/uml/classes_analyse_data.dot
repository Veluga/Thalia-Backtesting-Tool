digraph "classes" {
charset="utf-8"
rankdir=BT
"0" [label="{Asset|+dividends(date) : DataFrame(Dividends)\l+ticker : String\l+values(date) : DataFrame(Open, Low, High, Close)\l+weight : Decimal\l|}", shape="record"];
"1" [label="{Strategy|+assets : [Asset]\l+contribution_amount : Decimal\l+contribution_dates : DatetimeIndex\l+dates : DatetimeIndex\l+rebalancing_dates : DatetimeIndex\l+starting_balance : Decimal\l|+best_year() : Decimal\l+worst_year() : Decimal\l+best_year_no() : Integer\l+worst_year_no() : Integer\l+convert_usd(exchange_rate: DataFrame, usd_vals: Series) : Series\l+total_return() : Series\l+final_balance() : Decimal\l+cagr() : float\l+sortino_ratio(risk_free_rate : DataFrame) : float\l+sharpe_ratio(risk_free_rate : DataFrame) : float\l+drawdowns(balance: Series) : Series\l+max_drawdown() : Decimal\l+drawdown_summary(drawdown: Series) : DataFrame\l+relative_yearly_returns() : Series\l-allocate_investments(
    balance: Decimal, asset_weights: [Decimal], asset_vals: [Decimal]) : [Decimal]\l-drawdown_periods(drawdown: Series) : [DataFrame]\l-measure_weights(asset_vals: [Decimal]) : [Decimal]\l-calc_balance(invesments: [Decimal], asset_vals: [Decimal]) : Decimal\l-collect_dividend(dividend: Decimal, holdings: Decimal, price: Decimal) : Decimal\l-risk_adjusted_returns(
    risk_free_rate: DataFrame) : [Decimal]\l-jan_firsts(dates) : DatetimeIndex\l}", shape="record"];
"0" -> "1" [arrowhead="diamond", arrowtail="none", style="solid"];

}
